/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type { UserCenter, UserCenterInterface } from "../UserCenter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "games",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "count",
            type: "uint32",
          },
          {
            internalType: "uint224",
            name: "total",
            type: "uint224",
          },
        ],
        internalType: "struct IUserCenter.Statistic",
        name: "joined",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint32",
            name: "count",
            type: "uint32",
          },
          {
            internalType: "uint224",
            name: "total",
            type: "uint224",
          },
        ],
        internalType: "struct IUserCenter.Statistic",
        name: "won",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "join",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "game",
        type: "address",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "joinedCounts",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "partner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "players",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "count",
            type: "uint32",
          },
          {
            internalType: "uint224",
            name: "total",
            type: "uint224",
          },
        ],
        internalType: "struct IUserCenter.Statistic",
        name: "joined",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint32",
            name: "count",
            type: "uint32",
          },
          {
            internalType: "uint224",
            name: "total",
            type: "uint224",
          },
        ],
        internalType: "struct IUserCenter.Statistic",
        name: "won",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "win",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class UserCenter__factory {
  static readonly abi = _abi;
  static createInterface(): UserCenterInterface {
    return new Interface(_abi) as UserCenterInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): UserCenter {
    return new Contract(address, _abi, runner) as unknown as UserCenter;
  }
}
